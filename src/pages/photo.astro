---
import Layout from "../layouts/Layout.astro";
import { getCldImageUrl } from "astro-cloudinary/helpers";
import { getStory } from "../utils/get-prompt";
import { getRandomName } from "src/utils/get-random-name";
import { getPromptsToGenerate } from "src/utils/get-prompts-to-generate";
import ImageContainer from "@components/ImageContainer.astro";
import { RiFolderDownloadFill } from "react-icons/ri";
import { GoHomeFill } from "react-icons/go";
import { FaRepeat } from "react-icons/fa6";

const { searchParams } = Astro.url;
// const id = searchParams.get("id");
// if (id === null) return Astro.redirect("/404?reason=ID");

let name = searchParams.get("name");
if (name === null) name = getRandomName();

const story = getStory(name);
const { title, paragraphs  } = story;
//const images = getPromptsToGenerate(story, id);
// const url = getCldImageUrl({
//   src: id,
// });


//console.log({ id, description, url, images });
---

<Layout title="Welcome to Astro">
  <section class="mx-auto max-w-[1200px]">
    <br />
    <h2 class="md:text-2xl text-lg mb-3">Optimized Original Image</h2>
    <ImageContainer url='/vas_a_caer.jpg' />
    <br />
  </section>
  <section class="mx-auto max-w-[1200px]">
    <br />
    <div id="story" class="bg-solid">
    <article class="mx-auto max-w-[1000px] gap-[20ox]">
      <h2 id="title-story" class="text-xl md:text-2xl">
        {title}
      </h2>
      {
        paragraphs.map((paragraph) => {
          return (
            <p class="prose dark:prose-invert text-justify">
              {paragraph.text}
            </p>
            <div class="flex justify-center">
              {paragraph.index_image !== null && 
              // <img
              //   class="max-w-full md:max-w-4/5 "
              //   src={images[paragraph.index_image]} 
              //   alt={`${paragraph.index_image}-image`} 
              // />
              <ImageContainer url={'/vas_a_caer.jpg'} />
              }
            </div>
          )
        })
      }
      <br/>
    </article>
  </divi>

  </section>
  <section class="mx-auto max-w-[1200px]">
    <div class="w-full flex flex-col justify-center">
      <div class="flex justify-center">
        <button id="save-story" type="button" class="flex justify-center gap-2 items-center md:w-1/2 w-full h-[50px] p-2 bg-orange-600 hover:bg-orange-500 active:bg-orange-400 transition duration-200 text-white rounded-xl">
          Save Story
          <span>
            <RiFolderDownloadFill color="white" size={30} />
          </span>
        </button>
      </div>
      <br/>
      <div class="flex justify-center">
        <button id="save-story" type="button" class="flex justify-center gap-2 items-center md:w-1/2 w-full h-[50px] p-2 bg-orange-600 hover:bg-orange-500 active:bg-orange-400 transition duration-200 text-white rounded-xl">
          Change Story
          <span>
            <FaRepeat color="white" size={30} />
          </span>
        </button>
      </div>
      <br/>
      <div class="flex justify-center">
        <button id="save-story" type="button" class="flex justify-center gap-2 items-center md:w-1/2 w-full h-[50px] p-2 bg-orange-600 hover:bg-orange-500 active:bg-orange-400 transition duration-200 text-white rounded-xl">
          Upload another image
          <span>
            <GoHomeFill color="white" size={30} />
          </span>
        </button>
      </div>
    </div>
  </section>
</Layout>

<style>
  section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    background: light-dark(#fff, #1b1b1b);
    border: 4px solid light-dark(#28374773, #d4dbdb49);
    border-radius: 15px;
    padding: 1rem;
    margin: 1rem auto 1rem;
  }
  h2 {
    text-align: center;
  }
  p {
    color: light-dark(#313131, #a7a5a5);
    text-align: center;
    font-size: 1.2rem;
  }
  article p {
    font-size: 1.2rem;
    margin: 15px auto;
  }

  img {
    height: auto;
    border-radius: 15px;
  }
  article {
    margin: auto;
    gap: 20px;
    max-width: 1000px;
  }
</style>

<script >
  import * as htmlToImage from 'html-to-image';

  document.addEventListener('DOMContentLoaded', () => {
    let story = document.getElementById('story');
    let saveStory = document.getElementById('save-story');

    if (story && saveStory) {
      saveStory.addEventListener('click', () => {
        htmlToImage.toJpeg(story, { 
          cacheBust: true,
          quality: 0.9,
          style: {
            display: 'flex',
            flexDirection: 'column',
            justifyContent: 'center',
            alignItems: 'center',
          }
        })
          .then((dataUrl) => {
            const a = document.createElement('a');
            const titleStory = document.getElementById('title-story');
            const formatName = titleStory?.innerText.replaceAll(' ', '-').toLowerCase() || 'story';
            a.href = dataUrl;
            a.download = `${formatName}.jpeg`;
            a.click();
          })
          .catch((error) => {
            console.error('Error al generar la imagen:', error);
          });
      });
    } else {
      console.warn('No se encontr√≥ el elemento "story" o "save-story".');
    }
  });

  // TODO: implement buttons actions go to home and reload page with same id
</script>