---
import ImageContainer from "./ImageContainer.astro";
import { getStory } from "../utils/get-prompt";
import { getImagesGenerated } from "src/utils/get-cloudinary-images";


const { id, name } = Astro.props;
const story = getStory(name);
const { title, paragraphs  } = story;
const images = getImagesGenerated(story, id);

---
<script type="module" src="https://cdn.jsdelivr.net/npm/ldrs/dist/auto/quantum.js"></script>

<section class="mx-auto max-w-[1200px]">
  <div id="story" class="bg-solid">
  <br />
  <article class="mx-auto max-w-[1000px] gap-[20ox] flex flex-col justify-center">
    <h2 id="title-story" class="text-xl md:text-2xl text-center">
      {title}
    </h2>
    {
      paragraphs.map((paragraph) => {
        return (
          <p class="prose dark:prose-invert text-solid text-justify mx-auto my-5 text-lg">
            {paragraph.text}
          </p>
          <div class="flex justify-center">
            {paragraph.index_image !== null && 
            //<ImageContainer server:defer id={id} url={url} />
            <ImageContainer 
              server:defer 
              id={id} 
              url={images[paragraph.index_image]} 
            >
              <div
                slot="fallback"
                class="bg-fallback mx-auto w-[500px] h-[500px] rounded-2xl flex flex-col justify-center items-center gap-2"
              >
                <l-quantum
                  size='55'
                  speed='2.0'
                  color="orange"
                ></l-quantum>
                <span>Generating Image</span>
              </div>
            </ImageContainer>
            }
          </div>
        )
      })
    }
  </article>
  <br/>
</div>
</section>


<style>
  .bg-fallback {
    background: light-dark(#cccccc, #414141);
  }
</style>